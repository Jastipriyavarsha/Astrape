{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K PAVAN KUMAR YADAV\\\\ecommerce-project\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport API from \"../api/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const syncGuestCartToServer = async () => {\n    try {\n      const guestCart = JSON.parse(localStorage.getItem(\"guest_cart\") || \"[]\");\n      if (!Array.isArray(guestCart) || guestCart.length === 0) return;\n      for (const entry of guestCart) {\n        if (entry !== null && entry !== void 0 && entry.itemId && entry !== null && entry !== void 0 && entry.qty) {\n          await API.post(\"/cart\", {\n            itemId: entry.itemId,\n            qty: entry.qty\n          });\n        }\n      }\n      localStorage.removeItem(\"guest_cart\");\n    } catch (_) {\n      // ignore sync errors\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await API.post(\"/auth/login\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      await syncGuestCartToServer();\n      navigate(\"/items\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Login failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: \"400px\",\n      margin: \"50px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","API","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","syncGuestCartToServer","guestCart","JSON","parse","localStorage","getItem","Array","isArray","length","entry","itemId","qty","post","removeItem","_","handleSubmit","e","preventDefault","res","setItem","data","token","err","_err$response","_err$response$data","alert","response","message","onSubmit","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["C:/Users/K PAVAN KUMAR YADAV/ecommerce-project/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport API from \"../api/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const syncGuestCartToServer = async () => {\r\n    try {\r\n      const guestCart = JSON.parse(localStorage.getItem(\"guest_cart\") || \"[]\");\r\n      if (!Array.isArray(guestCart) || guestCart.length === 0) return;\r\n      for (const entry of guestCart) {\r\n        if (entry?.itemId && entry?.qty) {\r\n          await API.post(\"/cart\", { itemId: entry.itemId, qty: entry.qty });\r\n        }\r\n      }\r\n      localStorage.removeItem(\"guest_cart\");\r\n    } catch (_) {\r\n      // ignore sync errors\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await API.post(\"/auth/login\", { email, password });\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      await syncGuestCartToServer();\r\n      navigate(\"/items\");\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      style={{ maxWidth: \"400px\", margin: \"50px auto\" }}\r\n    >\r\n      <h2>Login</h2>\r\n      <input\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}